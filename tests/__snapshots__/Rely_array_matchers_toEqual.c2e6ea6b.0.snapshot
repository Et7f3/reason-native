Rely array matchers › toEqual › expect.array.toEqual failure output
Running 1 test suite
<inverse><bold><red> FAIL </inverse></resetDimAndBold></resetColor> <whiteBright>expect.array.toEqual failure output</resetColor>
<bold><red>  \226\128\162 expect.array.toEqual failure output \226\128\186 actual shorter than expected</resetDimAndBold></resetColor>

    <dim>expect.array(</resetDimAndBold><red>received</resetColor><dim>).toEqual(</resetDimAndBold><green>expected</resetColor><dim>)</resetDimAndBold> <dim>/* using == */</resetDimAndBold>
    
    Expected value to equal:
      <green>{1, 2, 3}</resetColor>
    Received:
      <red>{1, 2}</resetColor>

<bold><red>  \226\128\162 expect.array.toEqual failure output \226\128\186 actual longer than expected</resetDimAndBold></resetColor>

    <dim>expect.array(</resetDimAndBold><red>received</resetColor><dim>).toEqual(</resetDimAndBold><green>expected</resetColor><dim>)</resetDimAndBold> <dim>/* using == */</resetDimAndBold>
    
    Expected value to equal:
      <green>{1, 2}</resetColor>
    Received:
      <red>{1, 2, 3}</resetColor>

<bold><red>  \226\128\162 expect.array.toEqual failure output \226\128\186 mismatched values</resetDimAndBold></resetColor>

    <dim>expect.array(</resetDimAndBold><red>received</resetColor><dim>).toEqual(</resetDimAndBold><green>expected</resetColor><dim>)</resetDimAndBold> <dim>/* using == */</resetDimAndBold>
    
    Expected value to equal:
      <green>{\"values\"}</resetColor>
    Received:
      <red>{\"mismatched\"}</resetColor>


<bold><whiteBright>Test Suites: </resetDimAndBold></resetColor><bold><red>1 failed</resetDimAndBold></resetColor>, 0 passed, 1 total
<bold><whiteBright>Tests:       </resetDimAndBold></resetColor><bold><red>3 failed</resetDimAndBold></resetColor>, 0 passed, 3 total
<bold><whiteBright>Time:        </resetDimAndBold></resetColor>< 1ms

