same matcher â€º not same failure output
Running 1 test suite
<inverse><bold><red> FAIL </inverse></resetDimAndBold></resetColor> <whiteBright>not same failure output</resetColor>
<bold><red>  \226\128\162 not same failure output \226\128\186 ints</resetDimAndBold></resetColor>

    <dim>expect.notSame(</resetDimAndBold><green>expected</resetColor><dim>, </resetDimAndBold><red>received</resetColor><dim>)</resetDimAndBold> <dim>/* using === */</resetDimAndBold>
    
    Expected value to not be:
      <green>1</resetColor>
    Received:
      <red>1</resetColor>

<bold><red>  \226\128\162 not same failure output \226\128\186 strings</resetDimAndBold></resetColor>

    <dim>expect.notSame(</resetDimAndBold><green>expected</resetColor><dim>, </resetDimAndBold><red>received</resetColor><dim>)</resetDimAndBold> <dim>/* using === */</resetDimAndBold>
    
    Expected value to not be:
      <green>hello</resetColor>
    Received:
      <red>hello</resetColor>
    
    <dim>Note that you are testing for referential equality between strings. You probably need to use `expect.equal` instead.</resetDimAndBold>

<bold><red>  \226\128\162 not same failure output \226\128\186 records</resetDimAndBold></resetColor>

    <dim>expect.notSame(</resetDimAndBold><green>expected</resetColor><dim>, </resetDimAndBold><red>received</resetColor><dim>)</resetDimAndBold> <dim>/* using === */</resetDimAndBold>
    
    Expected value to not be:
      <green>{7, \"7\"}</resetColor>
    Received:
      <red>{7, \"7\"}</resetColor>


<bold><whiteBright>Test Suites: </resetDimAndBold></resetColor><bold><red>1 failed</resetDimAndBold></resetColor>, 0 passed, 1 total
<bold><whiteBright>Tests:       </resetDimAndBold></resetColor><bold><red>3 failed</resetDimAndBold></resetColor>, 0 passed, 3 total
<bold><whiteBright>Time:        </resetDimAndBold></resetColor>< 1ms

